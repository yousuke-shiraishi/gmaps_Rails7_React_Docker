version: "3.9"

services:
  db:
    image: postgres:16
    env_file:
      - ./.env
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgresql/initdb.d:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    volumes:
      - ./api:/rails
      - ./api/storage:/rails/storage
      - bundle:/rails/vendor/bundle
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - ./api/.env
      - ./.env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:?set POSTGRES_USER}:${DB_PASS:?set DB_PASS}@db:5432/${POSTGRES_DB:?set POSTGRES_DB}
      WEB_CONCURRENCY: "0"
    working_dir: /rails # ← 追加：相対パス ./entrypoint.sh を解決
    command: >
      bash -lc 'set -e;
        mkdir -p tmp/pids && rm -f tmp/pids/server.pid;
        bundle check || bundle install;
        exec bundle exec rdbg --open --host 0.0.0.0 --port 12345 --nonstop -- bin/rails s -b 0.0.0.0 -p 3000 -P /tmp/server.pid
      '
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
      - "12345:12345"
    healthcheck:
      test:
        - CMD-SHELL
        - >
          ruby -rnet/http -ruri -e 'u=URI("http://localhost:3000/api/v1/health");
          res=Net::HTTP.get_response(u);
          exit(res.is_a?(Net::HTTPSuccess) ? 0 : 1)'
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 10s
  front:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./front:/app
      - front_node_modules:/app/node_modules
    environment:
      __VITE_ADDITIONAL_SERVER_ALLOWED_HOSTS: "nginx,front"
      NODE_ENV: development
      VITE_API_ORIGIN: http://localhost:8080
      NPM_CONFIG_LEGACY_PEER_DEPS: "true" # 念のため（npmを触る場面があっても壊れないよう保険）
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO- http://localhost:5173/ >/dev/null 2>&1 || exit 1",
        ]
      interval: 5s
      timeout: 3s
      retries: 50
    command: >
      sh -lc "
        corepack enable &&
        corepack prepare pnpm@10.15.1 --activate &&
        pnpm i --frozen-lockfile=false &&
        pnpm dev -- --host 0.0.0.0 --port 5173
      "
    ports:
      - "5173:5173"
      - "51204:51204" # Vitest UI
    depends_on:
      - api

  nginx:
    image: nginx:1.27-alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      api:
        condition: service_healthy
      front:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO- http://localhost/api/v1/health >/dev/null || exit 1",
        ]
      interval: 10s
      timeout: 3s
      retries: 30

volumes:
  pgdata:
  front_node_modules:
  storage:
  bundle:
